<template>
    <div class="mw-main">
        <a href="/" class="logo"><svg-logo @click="window.location.href='/'"></svg-logo></a>
        <div class="nav-button" @click="showNav = !showNav" :class="{ 'open': showNav }">
            <i class="top"></i>
            <i class="middle"></i>
            <i class="bottom"></i>
        </div>
        <div class="nav" :class="{ 'open': showNav }">
            <div class="menu">
                <a v-for="(item, index) in nav" :key="index" :href="item.url">{{item.text}}</a>
            </div>
            <div class="icons">
                <a href="javascript:void(0);" @click="weixin ? openQrcode = weixin : ''" class="icon icon-wx">
                    <div class="popup-layout" v-if="weixin"><img :src="weixin"/></div>
                </a>
                <a :href="weibo" target="_blank" class="icon icon-wb"></a>
<!--
                <a href="javascript:void(0);" @click="qq ? openQrcode = qq : openQrcode = ''" class="icon icon-qq">
                    <div class="popup-layout" v-if="qq"><img :src="qq"/></div>
                </a>
-->
            </div>
        </div>
        <div class="nav-mask" @click="showNav = false" v-if="showNav"></div>
        <div class="progress-bar" v-if="!loadedEnter">
            <div class="progress" ref="progress" :style="{ width: loadedWidth + '%' }"></div>
        </div>
        <div v-show="loadedEnter" class="mw-main-screen-1" :class="{ 'start': startEnter }">
            <div class="slogan" v-if="status == 'after'"><svg-slogan></svg-slogan></div>
            <div class="circle circle-1" :class="{ 'start': startEnter }"></div>
            <div class="circle circle-2" :class="{ 'start': startEnter }"></div>
            <div class="circle circle-3" :class="{ 'start': startEnter }"></div>
            <video-player class="cover" :options="videoGlobal" @canplaythrough="onCanplaythrough"></video-player>
            <div class="road">
                <div class="man"></div>
                <div class="frames" :class="{ 'start': startEnter }"></div>
                <div class="tearing" :class="{ 'start': startEnter }"></div>
                <div class="light" :class="{ 'start': startEnter }"></div>
            </div>
            <div class="road-copy" :class="{ 'show-shadow': showMask || startEnter, 'start': startEnter }">
                <div class="button" :class="{ 'disable': startEnter }" @mouseenter="hoverStart('enter')" @mouseleave="hoverStart('leave')" @click="start"></div>
                <div class="button-border" :class="{ 'start': startEnter }"></div>
            </div>
            <div class="mask" :class="{ 'show': showMask || startEnter, 'start': startEnter, 'default': !showMask && !startEnter }"></div>
        </div>
        <div class="mw-main-screen-2" :class="{ 'start': startEnter }">
            <!-- start -->
            <div :class="`swiper-container ${status}`">
                <div class="swiper-bg" ref="swiperBg" :style="{ 'width': swiperBgWidth + 'px' }" data-swiper-parallax="-100%">
                    <img :src="require(`@/assets/images/${status}.jpg`)" ref="swiperBgImg"/>
                </div>
                <div class="swiper-wrapper">
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth1 + 'px',
                                                        'backgroundPosition': `0 0`
                                                      }">
                        <div class="popup-1" v-if="popup1">
                            <div class="point" @click="showPopup = showPopup == 'a' ? '' : 'a'"></div>
                            <div class="box" :class="{ 'show': showPopup == 'a' }">
                                <div class="inner">{{ popup1 }}</div>
                                <i class="cap-top"></i>
                                <i class="cap-bottom"></i>
                            </div>
                        </div>
                        <div class="popup-2" v-if="popup2">
                            <div class="point" @click="showPopup = showPopup == 'b' ? '' : 'b'"></div>
                            <div class="box" :class="{ 'show': showPopup == 'b' }">
                                <div class="inner">{{ popup2 }}</div>
                                <i class="cap-top"></i>
                                <i class="cap-bottom"></i>
                            </div>
                        </div>
                        <div class="popup-3" v-if="popup3">
                            <div class="point" @click="showPopup = showPopup == 'c' ? '' : 'c'"></div>
                            <div class="box" :class="{ 'show': showPopup == 'c' }">
                                <div class="inner">{{ popup3 }}</div>
                                <i class="cap-top"></i>
                                <i class="cap-bottom"></i>
                            </div>
                        </div>
                        <div class="dhz" ref="anidhz"></div>
                        <div class="hs" ref="anihs"></div>
                        <div class="pz" ref="anipz"></div>
                        <div class="zp" ref="anizp"></div>
                    </div>
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth2 + 'px',
                                                        'backgroundPosition': `-${swiperWidth1}px 0`
                                                      }">
                        <div class="video-box">
                            <div class="video" :class="{ 'open': openVideoConference }">
                                <div class="play-button" @click="handleConferenceVideo" ref="playBtnBor">
<!--                                    <div class="play-button-border" :class="{ 'rotate': openVideoConference }"></div>-->
                                </div>
                                <video-player v-show="showVideoConference" ref="videoConferencePlayer" :options="videoConference"></video-player>
                                <div class="gojobs" :class="{'jobsbtn': showVideoConference}"><a href="jobs.html">马上应聘</a></div>
                            </div>
                        </div>
                        <div class="hb" ref="anihb"></div>
                        <div class="tb" ref="anitb"></div>
                    </div>
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth3 + 'px',
                                                        'backgroundPosition': `-${swiperWidth1 + swiperWidth2}px 0`
                                                      }"
                                              :class="{ 'open': showBigPopup }">
                        <div class="flash-button" @click="openBigPopup">
<!--                            <div class="flash-big" ref="aniflashbig"></div>-->
                            <div class="flash-ball flash-ball-0"></div>
                            <div class="flash-ball flash-ball-1"></div>
                            <div class="flash-ball flash-ball-2"></div>
                            <div class="flash-ball flash-ball-3"></div>
                            <div class="flash-ball flash-ball-4"></div>
                            <div class="flash-ball flash-ball-5"></div>
                            <div class="flash-ball flash-ball-6"></div>
                            <div class="flash-ball flash-ball-7" ref="flashBallEnd"></div>
                        </div>
                        <div v-for="(item, index) in logos" :class="`bubble bubble-${index}`"><img :src="item"/><i></i></div>
                        <div class="ssd" ref="anissd"></div>
                    </div>
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth4 + 'px',
                                                        'backgroundPosition': `-${swiperWidth1 + swiperWidth2 + swiperWidth3}px 0`
                                                      }">
                        <div class="jp" ref="anijp"></div>
<!--
                        <div class="dbsd">
                            <div class="db"></div>
                            <div class="dbflash"><div class="dbflash-inner" ref="anidbflash"></div></div>
                        </div>
-->
<!--                        <div class="bp" ref="anibp"></div>-->
                        <div class="jcy" ref="anijcy"></div>
                        <div class="nr" ref="aninr"></div>
                        <div class="wheel"></div>
                        <div class="popup-4" v-if="popup5">
                            <div class="point" @click="showPopup = showPopup == 'd' ? '' : 'd'"></div>
                            <div class="box" :class="{ 'show': showPopup == 'd' }">
                                <div class="inner">{{ popup5 }}</div>
                                <i class="cap-top"></i>
                                <i class="cap-bottom"></i>
                            </div>
                        </div>
                    </div>
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth5 + 'px',
                                                        'backgroundPosition': `-${swiperWidth1 + swiperWidth2 + swiperWidth3 + swiperWidth4}px 0`
                                                      }">
                        <div class="road-list">
                            <div class="list-box">
                                <a v-for="(item, index) in news" :href="item.url" target="_blank" class="item">
                                    <div class="title">{{ item.title }}</div>
                                    <span>{{ item.time }}</span>
                                    <p>{{ item.intro }}</p>
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth6 + 'px',
                                                        'backgroundPosition': `-${swiperWidth1 + swiperWidth2 + swiperWidth3 + swiperWidth4 + swiperWidth5}px 0`
                                                      }">
                        <div class="light-show light-show-1"></div>
                        <div class="light-show light-show-2"></div>
                        <div class="cdstyle">
                            <div class="cd"></div>
                            <div class="cd_c"></div>
                            <div class="people">
                                <div v-for="(item, index) in cdlist" :key="index" :class="`item people-${index}`">
                                    <div :class="`popup-cd-${index}`">
                                        <div class="btn" :style="{'backgroundImage': `url(${item.avatar})`}" @click="showPopupCD = showPopupCD == `cd-${index}` ? '' : `cd-${index}`" :class="{'show': showPopupCD == `cd-${index}`}"></div>
                                        <div class="box" :class="{ 'show': showPopupCD == `cd-${index}` }">
                                            <div class="inner">{{ item.message }}</div>
                                            <i class="cap-top"></i>
                                            <i class="cap-bottom"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
<!--                            <div class="bpxr" ref="anibpxr"></div>-->
<!--                            <div class="qc"></div>-->
                        </div>
                        <div class="jls" ref="anijls"></div>
                        <div class="ts"></div>
<!--
                        <div class="sound-box">
                            <div v-for="(item, index) in 24" :class="`sound-wave sound-wave-${index}`">
                                <i class="i-9"></i>
                                <i class="i-8"></i>
                                <i class="i-7"></i>
                                <i class="i-6"></i>
                                <i class="i-5"></i>
                                <i class="i-4"></i>
                                <i class="i-3"></i>
                                <i class="i-2"></i>
                                <i class="i-1"></i>
                                <i class="i-2"></i>
                                <i class="i-3"></i>
                                <i class="i-4"></i>
                                <i class="i-5"></i>
                                <i class="i-6"></i>
                                <i class="i-7"></i>
                                <i class="i-8"></i>
                                <i class="i-9"></i>
                            </div>
                        </div>
-->
                    </div>
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth7 + 'px',
                                                        'backgroundPosition': `-${swiperWidth1 + swiperWidth2 + swiperWidth3 + swiperWidth4 + swiperWidth5 + swiperWidth6}px 0`
                                                      }">
                        <div class="qrcode"><img :src="qrcode"/></div>
                    </div>
                    <div class="swiper-slide" :style="{ 
                                                        'width': swiperWidth8 + 'px',
                                                        'backgroundPosition': `-${swiperWidth1 + swiperWidth2 + swiperWidth3 + swiperWidth4 + swiperWidth5 + swiperWidth6 + swiperWidth7}px 0`
                                                      }">
                    </div>
                </div>
            </div>
            <!-- end -->
            <div class="mw-popup-big" :class="{ 'show': showBigPopupOpen }">
                <div class="box">
                    <div class="inner padding" v-html="popup4"></div>
                    <i class="cap-top"></i>
                    <i class="cap-bottom"></i>
                    <div class="close" @click="closeBigPopup"></div>
                </div>
            </div>
        </div>
        <div class="vertical-tips">
            请切换为横屏浏览
        </div>
        <div class="mw-popup-big" :class="{ 'show': openQrcode }">
            <div class="box" style="width: auto;">
                <div class="inner"><img :src="openQrcode"/></div>
                <i class="cap-top"></i>
                <i class="cap-bottom"></i>
                <div class="close outside" @click="openQrcode = ''"></div>
            </div>
        </div>
    </div>
</template>

<script>
    import axios from 'axios'
    import { whichTransitionEvent, whichAnimationEvent } from '@/utils'
    import { Swiper } from 'vue-awesome-swiper'
    import 'swiper/dist/css/swiper.min.css'
    
    export default {
        data () {
            return {
                status: '',
                loadedEnter: false,
                showNav: false,
                loadedWidth: 0,
                startEnter: false,
                showMask: false,
                nav: [],
                videoGlobal: {
                    autoplay: true,
                    muted: true,
                    controls: false,
                    loop: true,
                    preload: 'auto',
                    sources: [
                        {
                            type: 'video/mp4',
                            src: require('@/assets/video/global.mp4')
                        },
                        {
                            type: 'video/webm',
                            src: require('@/assets/video/global.webm')
                        },
                        {
                            type: 'video/ogg',
                            src: require('@/assets/video/global.ogv')
                        }
                    ]
                },
                swiperBgWidth: 0,
                swiperWidth1: 0,
                swiperWidth2: 0,
                swiperWidth3: 0,
                swiperWidth4: 0,
                swiperWidth5: 0,
                swiperWidth6: 0,
                swiperWidth7: 0,
                swiperWidth8: 0,
                showPopup: '',
                showPopupCD: '',
                popup1: '',
                popup2: '',
                popup3: '',
                popup4: '',
                popup5: '',
                openVideoConference: false,
                showVideoConference: false,
                videoConference: {
                    autoplay: false,
                    muted: false,
                    controls: true,
                    loop: false,
                    preload: 'auto',
                    sources: [],
                    bigPlayButton: false
                },
                showBigPopup: false,
                showBigPopupOpen: false,
                news: [{}, {}, {}, {}, {}, {}],
                cdlist: [],
                weixin: '',
                qq: '',
                weibo: '',
                openQrcode: '',
                qrcode: '',
                logos: []
            }
        },
        created () {
            this.status = window.dataJSON.status
            this.nav = window.dataJSON.nav
            this.popup1 = window.dataJSON.popup1
            this.popup2 = window.dataJSON.popup2
            this.popup3 = window.dataJSON.popup3
            this.popup4 = window.dataJSON.popup4
            this.popup5 = window.dataJSON.popup5
            this.cdlist = window.dataJSON.cdlist
            this.weixin = window.dataJSON.weixin ? window.dataJSON.weixin : require('@/assets/images/qrcodewx.jpg')
            this.qq = window.dataJSON.qq
            this.weibo = window.dataJSON.weibo
            this.qrcode = window.dataJSON.qrcode ? window.dataJSON.qrcode : require('@/assets/images/qrcode.png')
            this.videoConference.sources = window.dataJSON.video
            this.logos = window.dataJSON.logos
            this.loadEnterImage()
            axios.get('http://139.159.238.100/infor/infor.json?ptype=1&newstype=1').then((response) => {
                const data = response.data
                if (data.result_code == 1) {
                    let result = []
                    for (let i = 0; i < 6; i++) {
                        if (data.news[i]) {
                            result.push({
                                title: data.news[i].newstitle,
//                                intro: data.news[i].newsdigest,
                                intro: data.news[i].newsdigest.length > 40 ? data.news[i].newsdigest.substring(0, 40) + '...' : data.news[i].newsdigest,
                                time: data.news[i].newscreattime,
                                url: `news-content.html?type=${data.news[i].newstype}&id=${data.news[i].newsid}`
                            })
                        } else {
                            result.push({})
                        }
                    }
                    this.news = result
                }
            })
            setInterval(() => {
                this.openPopupCD()
            }, 8000)
        },
        watch: {
            loadedWidth (val) {
                if (val >= 99 && !this.loadedEnter) {
                    let transitionEvent = whichTransitionEvent()
                    transitionEvent && this.$refs.progress.addEventListener(transitionEvent, () => {
                        this.loadedEnter = true
                    })
                }
            },
            startEnter (val) {
                if (val) {
                    this.setEleSize()
                    window.onresize = () => {
                        this.setEleSize()
                    }
                    this.$nextTick(() => {
                        const swiperPage = new Swiper('.swiper-container', {
                            slidesPerView: 'auto',
                            spaceBetween: 0,
                            parallax: false,
                            mousewheel: true,
                            freeMode: true
                        })
                        document.body.addEventListener('mousewheel', () => {
                            if (swiperPage.isEnd) {
                                if (!this.showNav) {
                                    this.showNav = true
                                }
                            }
                        })
                        document.body.addEventListener('touchend', () => {
                            if (swiperPage.isEnd) {
                                if (!this.showNav) {
                                    this.showNav = true
                                }
                            }
                        })
                        this.animation({
                            length: 80,
                            dir: 'dhz/dhz_',
                            fps: 10,
                            ref: this.$refs.anidhz
                        })
                        this.animation({
                            length: 80,
                            dir: 'hs/hs_',
                            fps: 10,
                            ref: this.$refs.anihs
                        })
                        this.animation({
                            length: 80,
                            dir: 'pz/pz',
                            fps: 10,
                            ref: this.$refs.anipz
                        })
                        this.animation({
                            length: 80,
                            dir: 'zp/zp_',
                            fps: 10,
                            ref: this.$refs.anizp
                        })
                        this.animation({
                            length: 252,
                            dir: 'hb/hb_',
                            fps: 24,
                            ref: this.$refs.anihb
                        })
                        this.animation({
                            length: 150,
                            dir: 'tb/tb',
                            fps: 24,
                            ref: this.$refs.anitb
                        })
                        this.animation({
                            length: 126,
                            dir: 'ssd/ssd_',
                            fps: 10,
                            ref: this.$refs.anissd
                        })
//                        this.animation({
//                            length: 102,
//                            dir: 'dl/dl_',
//                            fps: 24,
//                            ref: this.$refs.aniflashbig
//                        })
                        this.animation({
                            length: 200,
                            dir: 'jp/jp_',
                            fps: 10,
                            ref: this.$refs.anijp
                        })
//                        this.animation({
//                            length: 102,
//                            dir: 'dl/dl_',
//                            fps: 24,
//                            ref: this.$refs.anidbflash
//                        })
//                        this.animation({
//                            length: 200,
//                            dir: 'bp/bp_',
//                            fps: 72,
//                            ref: this.$refs.anibp
//                        })
                        this.animation({
                            length: 200,
                            dir: 'jcy/jcy_',
                            fps: 24,
                            ref: this.$refs.anijcy
                        })
                        this.animation({
                            length: 274,
                            dir: 'nr/nr_',
                            fps: 24,
                            ref: this.$refs.aninr
                        })
//                        this.animation({
//                            length: 126,
//                            dir: 'bpxr/bpxr_',
//                            fps: 36,
//                            ref: this.$refs.anibpxr
//                        })
                        this.animation({
                            length: 126,
                            dir: 'jls/jls_',
                            fps: 36,
                            ref: this.$refs.anijls
                        })
                    })
                }
            }
        },
        methods: {
            openPopupCD () {
                if (this.indexCD < this.cdlist.length - 1) {
                    this.indexCD += 1
                } else {
                    this.indexCD = 0
                }
                this.showPopupCD = `cd-${this.indexCD}`
            },
            loadEnterImage () {
                const the = this
                const imgsArr = [
                    require('@/assets/images/button-start-border.png'),
                    require('@/assets/images/button-start-hover.png'),
                    require('@/assets/images/button-start.png'),
                    require('@/assets/images/circle-1.png'),
                    require('@/assets/images/circle-2.png'),
                    require('@/assets/images/circle-3.png'),
                    require('@/assets/images/man.png'),
                    require('@/assets/images/road-bottom-light.png'),
                    require('@/assets/images/road-frames.png'),
                    require('@/assets/images/road-light.png'),
                    require('@/assets/images/road.png'),
                    require('@/assets/images/tearing.png'),
                    require('@/assets/images/video-bg-left.png'),
                    require('@/assets/images/video-bg-right.png'),
                    require('@/assets/images/video-bg-left.png'),
                    require('@/assets/images/after.jpg'),
                    require('@/assets/images/before.jpg'),
                ]
                
                let loaded = 0
                var imgObj = null
                imgsArr.forEach((value, index, arr) => {
                    imgObj = new Image()
                    imgObj.src = imgsArr[index]
                    imgObj.onload = function() {
                        loaded++
                        the.loadedWidth += (1 / imgsArr.length * 100)
                    }
                })
            },
            onCanplaythrough () {
//                this.loadedWidth += 10
            },
            hoverStart (e) {
                if (e == 'enter') {
                    this.showMask = true
                } else if (e == 'leave') {
                    this.showMask = false
                }
            },
            start () {
                this.startEnter = true
            },
            setEleSize () {
                if (this.$refs.swiperBg) {
                    this.swiperBgWidth = this.$refs.swiperBgImg.clientWidth
                    this.swiperWidth1 = this.$refs.swiperBgImg.clientWidth * 0.16
                    this.swiperWidth2 = this.$refs.swiperBgImg.clientWidth * 0.142
                    this.swiperWidth3 = this.$refs.swiperBgImg.clientWidth * 0.123
                    this.swiperWidth4 = this.$refs.swiperBgImg.clientWidth * 0.2145
                    this.swiperWidth5 = this.$refs.swiperBgImg.clientWidth * 0.0772
                    this.swiperWidth6 = this.$refs.swiperBgImg.clientWidth * 0.2
                    this.swiperWidth7 = this.$refs.swiperBgImg.clientWidth * 0.08
                    this.swiperWidth8 = this.$refs.swiperBgImg.clientWidth * 0.0033
                }
            },
            loadImgs (imgs, fn) {
                let loaded = 0
                var loadedImgsArr = []
                var imgsArr = imgs
                var imgObj = null
                imgsArr.forEach((value, index, arr) => {
                    imgObj = new Image()
                    imgObj.src = imgsArr[index]
                    imgObj.onload = function() {
                        loaded++
                        if (loaded == imgsArr.length) {
                            fn && fn(loadedImgsArr)
                        }
                    }
                    loadedImgsArr.push(imgObj)
                })
            },
            createCanvas (config) {
                let canvas = document.createElement('canvas')
                config.parentBox.appendChild(canvas)
                let { offsetWidth, offsetHeight } = canvas.parentNode
                canvas.width = offsetWidth
                canvas.height = offsetHeight
                return canvas
            },
            ani (imgsArr, config, cb) {
                let canvas = this.createCanvas(config)
                let offsetWidth = imgsArr[0].width
                let offsetHeight = imgsArr[0].height
                let ctx = canvas.getContext('2d')
                let n = 0
                let timer = setInterval(() => {
                    //清屏
                    ctx.clearRect(0, 0, canvas.width, canvas.height)
                    //绘制图片
                    ctx.drawImage(
                        imgsArr[n],
                        0, 0, offsetWidth, offsetHeight,
                        0, 0, canvas.width, canvas.height
                    )
                    n++
                    //播放到最后一张图片
                    if (n == imgsArr.length) {
                        n = 0
                        cb && cb(timer)
                    }
                }, 1000 / config.fps)
            },
            animation (config, cb) {
                const imgs = function () {
                    let imgsArr = []
                    for (let i = 0; i < config.length; i++) {
                        let imgSrc = require(`@/assets/images/${config.dir}${i}.png`)
                        imgsArr.push(imgSrc)
                    }
                    return imgsArr
                }
                this.loadImgs(imgs(), (imgs) => {
                    this.ani(imgs, {
                        fps: config.fps,
                        parentBox: config.ref
                    }, (timer) => {
                        cb && cb(timer)
                    })
                })
            },
            handleConferenceVideo () {
                this.openVideoConference = true
                let transitionEvent = whichTransitionEvent()
                transitionEvent && this.$refs.playBtnBor.addEventListener(transitionEvent, () => {
                    this.showVideoConference = true
                    this.$refs.videoConferencePlayer.player.play()
                })
//                if (this.status == 'before') {
//                    alert('精彩内容即将奉上！')
//                } else {
//                    this.openVideoConference = true
//                    let transitionEvent = whichTransitionEvent()
//                    transitionEvent && this.$refs.playBtnBor.addEventListener(transitionEvent, () => {
//                        this.showVideoConference = true
//                        this.$refs.videoConferencePlayer.player.play()
//                    })
//                }
            },
            openBigPopup () {
                this.showBigPopup = true
                let transitionEvent = whichTransitionEvent()
                transitionEvent && this.$refs.flashBallEnd.addEventListener(transitionEvent, () => {
                    if (this.showBigPopup) {
                        this.showBigPopupOpen = true
                    }
                })
            },
            closeBigPopup () {
                this.showBigPopup = false
                this.showBigPopupOpen = false
            }
        }
    }
</script>

<style lang="scss">
    @import '~@/style/home';
</style>